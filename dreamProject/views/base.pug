head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css' integrity='sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh' crossorigin='anonymous')
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css')
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css')
  link(rel='stylesheet' href='/css/styles.min.css')
  title lily
body
  .container-fluid
  // A fluid container that uses the full witdh
  nav.navbar.fixed-top.navbar-dark.bg-dark
    a.navbar-brand.ml-5.font-weight-bolder.text-center(href='#!') Lord Views
  .d-flex.flex-column.mt-5
    h4.p-2.align-self-sm-center  Watch Videos
    // 1. The <iframe> (and video player) will replace this <div> tag.
    #player.p-2.align-self-sm-center
    .d-flex.flex-row.justify-content-center
      button.btn.btn-primary.load.m-2.col-sm-2.p-2(type='button') Url
      span.badge.badge-secondary.align-self-center.pt-2 0
      button.btn.btn-primary.btn-next.m-2.col-sm-2.p-2(type='button') Next
    form.d-flex.flex-column
      .form-group.ml-2.align-self-sm-center
        label(for='formGroupExampleInput') Q1. question 1
        // <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Example input">
        #formGroupExampleInput.custom-control.custom-radio
          input#customRadio1.custom-control-input(type='radio' name='customRadio' value='1')
          label.custom-control-label(for='customRadio1') Toggle this custom radio
        #formGroupExampleInput.custom-control.custom-radio
          input#customRadio2.custom-control-input(type='radio' name='customRadio' value='2')
          label.custom-control-label(for='customRadio2') Or toggle this other custom radio
      button.btn.btn-primary.btn-success.align-self-sm-center.mb-2(type='submit') Submit
    .d-flex.flex-column.mb-5
      .login-clean
        form.form--login
          h2.sr-only Login Form
          .illustration
          i.icon.ion-ios-navigate
          .form-group
          input.form-control.emailclass(type='email' name='email' placeholder='Email')
          .form-group
          input.form-control.passwordclass(type='password' name='password' placeholder='Password')
          .form-group
          button.btn.btn-primary.btn-block(type='submit') Log In
          a.forgot(href='#') Forgot your email or password?
      nav.navbar.fixed-bottom.navbar-dark.bg-dark
        a.navbar-brand.ml-5.font-weight-bolder.text-center(href='#!') Subscribe To 
    script(src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js')
    //- script(src='youtube.js')
    script.
      var emailelement = document.querySelector('.emailclass');
      var button2 = document.querySelector('.load');
      var button = document.querySelector('.btn-next');
      var passwordelement = document.querySelector('.passwordclass');
      var login = document.querySelector('.form--login');
      var tag = document.createElement('script');

      tag.src = 'https://www.youtube.com/iframe_api';
      tag.className = 'd-flex justify-content-sm-center';
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      let videoId;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '360',
          width: '480',
          videoId: 'DGQwd1_dpuc',
          playerVars: { rel: 0, showinfo: 0, ecver: 2 },
          events: {
           onReady: onPlayerReady,
           onStateChange: onPlayerStateChange
         }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
      event.target.pauseVideo();
      }

       // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.PLAYING && !done) {
      setTimeout(stopVideo, 600000);
      done = true;
      setInterval(calcCounts, 1000);
      }
      }

      function stopVideo() {
      player.stopVideo();
      }









      let x = 0;
      button.addEventListener('click', async () => {
      // videoId = 'qyYdnbNM2hc';
      videoId = video[x].submittedVideoIds;
      //- const markup = `<label for="formGroupExampleInput">Q1. ${video[x].questions[0]}</label>`;
      //- form.innerHTML= '';
      //- form.insertAdjacentHTML('beforeend', markup);
      player.loadVideoById(videoId, 0, 'large');
      x++;
      });

      const dataCapture = async () => {
      const email = emailelement.value;
      const password = passwordelement.value;
      console.log(email, password);

      const response = await axios({
      method: 'POST',
      url: 'http://127.0.0.1:3000/api/v1/user/login',
      data: {
      email,
      password
      }
      });
      if(response.data.status == 'success'){
      console.log(`logged in successfully ${ response.data.token}`);
      }
      console.log(email, password);
      }
      login.addEventListener('submit', async (e) => {
      e.preventDefault();  
      await dataCapture();
      });
      let video = [];
      const loadIds = async () => {
      const response = await axios({
      method: 'GET',
      // baseURL : '',
      url: 'http://127.0.0.1:3000/api/v1/user/view/videos',
    
      });
      const timers = [];
      video = response.data.videos;
      console.log(video);
      // timers = response.data.
      // console.log(response);
      }
      button2.addEventListener('click', async () => {
      await loadIds();
  
      });

    script(src='https://code.jquery.com/jquery-3.4.1.slim.min.js' integrity='sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n' crossorigin='anonymous')
    script(src='https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js' integrity='sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo' crossorigin='anonymous')
    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js' integrity='sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6' crossorigin='anonymous')
