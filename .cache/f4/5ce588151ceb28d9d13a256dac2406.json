{"id":"../../node_modules/core-js/modules/esnext.math.clamp.js","dependencies":[{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\package.json","includedInParent":true,"mtime":1588222385097},{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1588222376807},{"name":"../internals/export","loc":{"line":1,"column":16},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.math.clamp.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\export.js"}],"generated":{"js":"var $ = require('../internals/export');\n\nvar min = Math.min;\nvar max = Math.max;\n\n// `Math.clamp` method\n// https://rwaldron.github.io/proposal-math-extensions/\n$({ target: 'Math', stat: true }, {\n  clamp: function clamp(x, lower, upper) {\n    return min(upper, max(lower, x));\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.math.clamp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"../../node_modules/core-js/modules/esnext.math.clamp.js":"var $ = require('../internals/export');\n\nvar min = Math.min;\nvar max = Math.max;\n\n// `Math.clamp` method\n// https://rwaldron.github.io/proposal-math-extensions/\n$({ target: 'Math', stat: true }, {\n  clamp: function clamp(x, lower, upper) {\n    return min(upper, max(lower, x));\n  }\n});\n"},"lineCount":13}},"error":null,"hash":"a835c0d8dbb6007f23ae6064837e1341","cacheData":{"env":{}}}