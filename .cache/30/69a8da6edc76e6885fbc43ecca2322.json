{"id":"../../node_modules/core-js/modules/esnext.number.from-string.js","dependencies":[{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\package.json","includedInParent":true,"mtime":1588222385097},{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1588222376807},{"name":"../internals/export","loc":{"line":2,"column":16},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.number.from-string.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/to-integer","loc":{"line":3,"column":24},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.number.from-string.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\to-integer.js"},{"name":"../internals/number-parse-int","loc":{"line":4,"column":23},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.number.from-string.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\number-parse-int.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar parseInt = require('../internals/number-parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/;\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({ target: 'Number', stat: true }, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.number.from-string.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../../node_modules/core-js/modules/esnext.number.from-string.js":"'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar parseInt = require('../internals/number-parse-int');\n\nvar INVALID_NUMBER_REPRESENTATION = 'Invalid number representation';\nvar INVALID_RADIX = 'Invalid radix';\nvar valid = /^[\\da-z]+$/;\n\n// `Number.fromString` method\n// https://github.com/tc39/proposal-number-fromstring\n$({ target: 'Number', stat: true }, {\n  fromString: function fromString(string, radix) {\n    var sign = 1;\n    var R, mathNum;\n    if (typeof string != 'string') throw TypeError(INVALID_NUMBER_REPRESENTATION);\n    if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    if (string.charAt(0) == '-') {\n      sign = -1;\n      string = string.slice(1);\n      if (!string.length) throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    R = radix === undefined ? 10 : toInteger(radix);\n    if (R < 2 || R > 36) throw RangeError(INVALID_RADIX);\n    if (!valid.test(string) || (mathNum = parseInt(string, R)).toString(R) !== string) {\n      throw SyntaxError(INVALID_NUMBER_REPRESENTATION);\n    }\n    return sign * mathNum;\n  }\n});\n"},"lineCount":31}},"error":null,"hash":"2c5065ddbbac1cea9f42e4c5c2a83c66","cacheData":{"env":{}}}