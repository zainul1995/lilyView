{"id":"../../node_modules/lodash/chunk.js","dependencies":[{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\package.json","includedInParent":true,"mtime":1588224245451},{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1586834262918},{"name":"./_baseSlice","loc":{"line":1,"column":24},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\chunk.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\_baseSlice.js"},{"name":"./_isIterateeCall","loc":{"line":2,"column":29},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\chunk.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\_isIterateeCall.js"},{"name":"./toInteger","loc":{"line":3,"column":24},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\chunk.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\lodash\\toInteger.js"}],"generated":{"js":"var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/lodash/chunk.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/lodash/chunk.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"../../node_modules/lodash/chunk.js":"var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n"},"lineCount":51}},"error":null,"hash":"a8dd0b284bcc545e8b31d1da88220f44","cacheData":{"env":{}}}