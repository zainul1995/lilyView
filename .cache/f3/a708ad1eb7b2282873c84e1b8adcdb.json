{"id":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","dependencies":[{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\package.json","includedInParent":true,"mtime":1588222385097},{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1588222376807},{"name":"../internals/export","loc":{"line":3,"column":16},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.async-iterator.take.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/an-object","loc":{"line":4,"column":23},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.async-iterator.take.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/to-positive-integer","loc":{"line":5,"column":32},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.async-iterator.take.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\to-positive-integer.js"},{"name":"../internals/async-iterator-create-proxy","loc":{"line":6,"column":39},"parent":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\modules\\esnext.async-iterator.take.js","resolved":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\internals\\async-iterator-create-proxy.js"}],"generated":{"js":"'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  if (!this.remaining--) {\n    this.done = true;\n    return { done: true, value: undefined };\n  } return this.next.call(this.iterator, arg);\n});\n\n$({ target: 'AsyncIterator', proto: true, real: true }, {\n  take: function take(limit) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/esnext.async-iterator.take.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../../node_modules/core-js/modules/esnext.async-iterator.take.js":"'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\n\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (arg) {\n  if (!this.remaining--) {\n    this.done = true;\n    return { done: true, value: undefined };\n  } return this.next.call(this.iterator, arg);\n});\n\n$({ target: 'AsyncIterator', proto: true, real: true }, {\n  take: function take(limit) {\n    return new AsyncIteratorProxy({\n      iterator: anObject(this),\n      remaining: toPositiveInteger(limit)\n    });\n  }\n});\n"},"lineCount":23}},"error":null,"hash":"51aae9ffbe970681bd868edc7ee9a46d","cacheData":{"env":{}}}