{"id":"../../node_modules/core-js/internals/collection-of.js","dependencies":[{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\package.json","includedInParent":true,"mtime":1588222385097},{"name":"C:\\Users\\TARANNUM-PC\\Desktop\\workspace\\newServer\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1588222376807}],"generated":{"js":"'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nmodule.exports = function of() {\n  var length = arguments.length;\n  var A = new Array(length);\n  while (length--) A[length] = arguments[length];\n  return new this(A);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/collection-of.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"../../node_modules/core-js/internals/collection-of.js":"'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nmodule.exports = function of() {\n  var length = arguments.length;\n  var A = new Array(length);\n  while (length--) A[length] = arguments[length];\n  return new this(A);\n};\n"},"lineCount":9}},"error":null,"hash":"39d22183c47f3b21495ed6ad4d6145c7","cacheData":{"env":{}}}